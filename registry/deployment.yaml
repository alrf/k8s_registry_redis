apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - image: registry:latest
        name: docker-registry
        envFrom:
        - configMapRef:
            name: registry
        volumeMounts:
        # - name: files
        #   mountPath: /etc/k8s
        - name: image-data
          mountPath: /var/lib/registry
        ports:
        - name: registry
          containerPort: 5000
          protocol: TCP
        imagePullPolicy: Always
      restartPolicy: Always
      volumes:
        # - name: files
        #   configMap:
        #     name: registry
        #     items:
        #     - key: HTPASSWD_FILE
        #       path: htpasswd
        - name: image-data
          persistentVolumeClaim:
            claimName: docker-registry
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: registry
  namespace: docker-registry
data:
  REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
  REGISTRY_HTTP_SECRET: FPNxM9cwZDkxO5RkMDUzXjk6YjIyOWRmhjBlMWRhMjQG
  REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR: redis
  REGISTRY_REDIS_ADDR: redis:6379
  REGISTRY_STORAGE_DELETE_ENABLED: "true"
  # REGISTRY_AUTH: htpasswd
  # REGISTRY_AUTH_HTPASSWD_PATH: /etc/k8s/htpasswd
  # REGISTRY_AUTH_HTPASSWD_REALM: Private Registry
  # HTPASSWD_FILE: |
  #   admin:xxxxxxxxxxxxxxxxxxxxxxx
